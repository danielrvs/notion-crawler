{"mappings":"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","sources":["Code/packages/notion-crawler/src/index.js"],"sourcesContent":["import {\n  getAllPagesInSpace,\n  getCanonicalPageId,\n  uuidToId,\n  getBlockTitle,\n  getTextContent,\n  normalizeTitle,\n} from \"notion-utils\";\nimport { NotionAPI } from \"notion-client\";\nconst notion = new NotionAPI();\n\nexport default async function notionCrawler(\n  rootNotionPageId,\n  spaceId,\n  config = {}\n) {\n  const pageMap = await getAllPagesInSpace(\n    rootNotionPageId,\n    spaceId,\n    notion.getPage.bind(notion),\n    {\n      traverseCollections: true,\n      uuid: true,\n      ...config,\n    }\n  );\n\n  const pageBlocks = Object.keys(pageMap).reduce((map, pageId) => {\n    const notionPageId = uuidToId(pageId);\n    const recordMap = pageMap[pageId];\n    if (!recordMap) {\n      throw new Error(`Error loading page \"${pageId}\"`);\n    }\n\n    const canonicalPageId =\n      (rootNotionPageId || \"\").split(\"-\").join(\"\") ===\n      (pageId || \"\").split(\"-\").join(\"\")\n        ? \"/\"\n        : getCanonicalPageId(pageId, recordMap, {\n            uuid: false,\n          });\n    const block = pageMap[pageId].block[pageId];\n    const blockValue = block.value;\n    const title = getBlockTitle(blockValue, recordMap);\n\n    const response = {\n      ...map,\n      [notionPageId]: {\n        id: notionPageId,\n        parentId: blockValue.parent_id.split(\"-\").join(\"\"),\n        canonicalPageId,\n        title,\n        rawData: blockValue,\n      },\n    };\n\n    if (blockValue.parent_table === \"collection\") {\n      const collection = pageMap[pageId].collection[blockValue.parent_id];\n      if (collection?.value?.name) {\n        const collectionName = getTextContent(collection.value.name);\n        const canonicalPageId = normalizeTitle(collectionName);\n        response[notionPageId].collection = {\n          name: collectionName,\n          canonicalPageId: canonicalPageId,\n          rawData: collection,\n        };\n        response[\n          notionPageId\n        ].canonicalPageId = `${canonicalPageId}/${response[notionPageId].canonicalPageId}`;\n      }\n    }\n\n    return response;\n  }, {});\n\n  const appendParentSlug = (pageId, previous = \"\") => {\n    const page = pageBlocks[pageId];\n    if (!page?.parentId || !pageBlocks[page.parentId]) {\n      return previous;\n    }\n    return appendParentSlug(\n      page.parentId,\n      `${pageBlocks[page.parentId].canonicalPageId}/${previous}`\n    );\n  };\n\n  const notionPageIdToSlugMapper = {};\n\n  for (const key in pageBlocks) {\n    pageBlocks[key].slug = `${appendParentSlug(\n      key,\n      pageBlocks[key].canonicalPageId\n    )}`;\n\n    // TODO: Temp fix. Refactor this.\n    if (pageBlocks[key].slug.startsWith(\"//\")) {\n      pageBlocks[key].slug = pageBlocks[key].slug.slice(1);\n    }\n    if (!pageBlocks[key].slug.startsWith(\"/\")) {\n      pageBlocks[key].slug = `/${pageBlocks[key].slug}`;\n    }\n\n    notionPageIdToSlugMapper[key] = pageBlocks[key].slug;\n  }\n\n  return {\n    pageBlocks,\n    notionPageIdToSlugMapper,\n    pageMap,\n  };\n}\n"],"names":[],"version":3,"file":"main.js.map"}